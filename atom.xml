<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长歌|91Change</title>
  
  <subtitle>庐山烟雨浙江潮，未到千般恨不消  及至到来无一事，庐山烟雨浙江潮</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.91change.club/"/>
  <updated>2019-09-15T07:30:44.952Z</updated>
  <id>http://www.91change.club/</id>
  
  <author>
    <name>长长长长歌丶</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>中秋节开始堕落了</title>
    <link href="http://www.91change.club/2019/09/15/%E4%B8%AD%E7%A7%8B%E8%8A%82/"/>
    <id>http://www.91change.club/2019/09/15/中秋节/</id>
    <published>2019-09-15T07:19:13.000Z</published>
    <updated>2019-09-15T07:30:44.952Z</updated>
    
    <content type="html"><![CDATA[<h2 id="中秋节快乐"><a href="#中秋节快乐" class="headerlink" title="中秋节快乐"></a>中秋节快乐</h2><meta name="referrer" content="no-referrer"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=108931&auto=1&height=66"></iframe><a id="more"></a><p><img src="https://ws1.sinaimg.cn/large/006p97Wqly1g708h2f7edj356o3ggu0y.jpg" alt="风景.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;中秋节快乐&quot;&gt;&lt;a href=&quot;#中秋节快乐&quot; class=&quot;headerlink&quot; title=&quot;中秋节快乐&quot;&gt;&lt;/a&gt;中秋节快乐&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=108931&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
    
      <category term="考研" scheme="http://www.91change.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="感悟" scheme="http://www.91change.club/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="中秋节" scheme="http://www.91change.club/tags/%E4%B8%AD%E7%A7%8B%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>浅谈c指针(二)</title>
    <link href="http://www.91change.club/2019/08/27/9/"/>
    <id>http://www.91change.club/2019/08/27/9/</id>
    <published>2019-08-27T08:33:00.000Z</published>
    <updated>2019-08-27T15:59:42.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈c语言灵魂——指针"><a href="#浅谈c语言灵魂——指针" class="headerlink" title="浅谈c语言灵魂——指针"></a>浅谈c语言灵魂——指针</h2><p>由于最近开学了，又要实习，还要准备考研，好几天没写了。</p><a id="more"></a><p>上次写到指针和数组，今天在看一些c的面试题发现一个很重要的东西就是<font size="5" color="red">const</font>了，相信学过c的人一定会说：“const就意味着是常数了”，那只能说明你只懂皮毛了，这里推荐一篇外国大佬 Dan Saks的文章《const T vs T const》，在他的文章里完全概括了所有的用法。</p><p>下面的代码什么意思：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const  int  a;</span><br><span class="line">int  const  a;</span><br><span class="line">const  int  *a;</span><br><span class="line">int  const  *a;</span><br><span class="line">int*  const  a;</span><br><span class="line">int  const*  const a ;</span><br></pre></td></tr></table></figure><p>一般的int const和const int效果是一样的，a都是一个常数整数型的数，在这里我们只要记住<strong>int 与const 哪个放前哪个放后都是一样的</strong>，第三个a首先是一个指针其次它是一个指向常整数型的，也就是说*a是常量了，是不能被赋值的，但是a的值是可以改变的，也就是说它可以重新指向另一个地址。看下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int  i1 = 30; </span><br><span class="line">int  i2 = 40; </span><br><span class="line">const int *a = &amp;i1; </span><br><span class="line">a  =  &amp;i2;         /* 注意这里，a可以在任意时候重新赋值一个新内存地址 */ </span><br><span class="line">i2  =  80;           /* 注意看：这里不能能用*a = 80 来代替 */ </span><br><span class="line">printf(&quot;%d\n&quot;, *a); /* 输出是 80 */</span><br></pre></td></tr></table></figure><p>首先const修饰的是整个<em>a(注意不是a)。所以</em>a是常量，不能被赋值的，即使a所指的i2是变量。</p><p>由于前面第一个和第二已经说明const和int谁在前都是一样的，所以第三个和第四个效果也是一样的，这里可能就会问了那怎么用const来修饰a呢？，注意第五个的const的位置，那你就应该明白了。</p><p><strong>int  *const  a</strong> (int*  const和int  *const是一样的，只是风格不同)<br><br>先看下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int i1 = 30; </span><br><span class="line">int i2 = 40; </span><br><span class="line">int *const a = &amp;i1; </span><br><span class="line">/* a = &amp;i2; 注意这里，a 不能再这样重新赋值了，即不能再指向另一个新地址第4 行的注释）*/ </span><br><span class="line">i1 = 80;               /* 想想看：这里能用 *a = 80; 来代替吗？可以，这里可以通过*a 修改 i1 的值。（第 5 行的注释）*/ </span><br><span class="line">/* 请自行与前面一个例子比较。 */ </span><br><span class="line">printf(&quot;%d&quot;, *a);/* 输出是 80 */</span><br></pre></td></tr></table></figure><p>写到这里相信你们都懂了，a的值是不能重新被赋值的。<strong>它只能永远指向初始化时的内存地址了</strong>但是你可以通过改变*a来修改i1的值了。</p><p>所以说第五个意思 a 是一个指向整型数的常指针（也就 是说，指针指向的整型数是可以修改的，但指针是不可修改的）</p><p>与前一个例子对照一下吧！看以下的两点分析：<br>1）a 因为有了 const 的修饰，所以只是一个指针常量：也就是说 a 值是不可修改的（即 a 不可以重新指向 i2 这个变量了）（请看第 4 行的注释）。<br>2）整个*a的前面没有 const 的修饰。也就是说，*a 是变量而不是常量，所以我们可以通过*a来修改它所指内存 i1 的值（请看第 5 行的注释）。<br><br><strong>总之一句话，这次的 a 是一个指向 int 变量类型数据的指针常量。</strong></p><p>也就是说如果 const 修饰在*a 前，则不能改的是*a(即不能类似这样：*a=50;赋值)而不是指 a。  如果 const 是直接写在 a前，则 a不能改(即不能类似这样：a=&i;赋值)。</p><p>说完第五个了，接着的int  const*  const  a; 最后一个意味着 a 是一个 指向常整型数的常指针（也就是说，指针指向的整型数是不可修改的，同时指针也是不可 修改的）</p><p>const的一些基本用法就这些了，最后补充一下：</p><pre><code>1：int  *pi 指针指向 const  int  i 常量的情况const  int  i1 = 40; int  *pi; pi  =  &amp;i1;     // 这样可以吗？不行，VC 下是编译错。                 // const  int 类型的 i1 的地址是不能赋值给指向 int 类型地址的指针 pi 的。否则 pi 岂不是能修改 i1 的值了吗！pi = (int *) &amp;i1;     //这样可以吗？强制类型转换可是 C 所支持的。//VC 下编译通过，但是仍不能通过 *pi = 80 来修改 i1 的值。去试试吧！看看具体的怎样。2：const  int  *pi 指针指向 const  int  i1 的情况const  int  i1=40; const  int  *pi; pi = &amp;i1;      // 两个类型相同，可以这样赋值。很显然，i1 的值无论是通过pi 还是 i1 都不能修改的。 </code></pre><p>什么还要如此看重关键字 const 呢？<br>1). 关键字 const 的作用是为给读你代码的人传达非常有用的信息，实际上，声明一个参数 为常量是为了告诉了用户这个参数的应用目的。如果你曾花很多时间清理其它人留下的垃 圾，你就会很快学会感谢这点多余的信息。（当然，懂得用 const 的程序员很少会留下的垃圾 让别人来清理的。）<br>2). 通过给优化器一些附加的信息，使用关键字 const 也许能产生更紧凑的代码。<br>3). 合理地使用关键字 const 可以使编译器很自然地保护那些不希望被改变的参数，防止其 被无意的代码修改。简而言之，这样可以减少 bug 的出现。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;a href=&quot;#浅谈c语言灵魂——指针&quot; class=&quot;headerlink&quot; title=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;/a&gt;浅谈c语言灵魂——指针&lt;/h2&gt;&lt;p&gt;由于最近开学了，又要实习，还要准备考研，好几天没写了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指针" scheme="http://www.91change.club/tags/%E6%8C%87%E9%92%88/"/>
    
      <category term="c语言" scheme="http://www.91change.club/tags/c%E8%AF%AD%E8%A8%80/"/>
    
      <category term="const用法" scheme="http://www.91change.club/tags/const%E7%94%A8%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2019年计划</title>
    <link href="http://www.91change.club/2019/08/24/8/"/>
    <id>http://www.91change.club/2019/08/24/8/</id>
    <published>2019-08-24T11:49:53.000Z</published>
    <updated>2019-09-14T11:16:31.200Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="密码：change" />    <label for="pass">密码：change</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19u5OdmabkJ8wtjNUkqoFzchlfEL/ahhpvJAaNzRzKist8NGmpGhEReNx264N5ougvJK0v4xrPClH6/5kPLCsx35IgZEKE67Yxv8wrj+EAJhv82Dh3TQ4+tLYZs7wR/AGv3lDa+znIA2gITv8xOWsEun+O5b/f0dZIzGEcv9TUxeOBXuf6LzHjeceUA5cQanINgXeoQVR7PQ2Ww4VmQzlff89vNM3cGC87g6h8cydEcARR4g5r4t+46xQnTEHgGram33ObLD6k8Gw36hxSPfxV9gPspXyQeiXzr1srJjhda5GGqTn0TvKxlMItTbb78a5E2vDL6ZC2srmTMYCnAxls50xgA98Xf246Db+mVv2dJZI+TI17yU5522wBjZK7BOCxK856KIRvK/8HwD0+twLnSIG8ps6+AqG9JTNOxMUKA47UJG7hij3TlmzJHXbOXQTKYlWixjgmR9+0hMaVPiQQtPvUg6Adih3O3z+oNraHW0SZbkxt/iMNfRfgHoW6ZvQ5xle9sHMhzD7vbHHoZt9LtsjvD5mDSv6mHqaZSt0NiETGXXx1oY7WPRZzMKmtWielwmu3Mpm+kkTQElIiTRIelI3fZ/ihJ/idiJBkdLFduk96ugAUyumCdxGQwY4nyn1NMJVq1RjdeofztnUqA0G+Za8pt44gKfZ9TvLCc3Ae59cMDa2s9P4QSa0abCWNDiijibiFb+1TAMqxi+fd1sOAYT5g59PhYvuZnYIugsj1nHCPN7JuUifoJJ39V78eqH4nBBt6yjrtcj8/LsXC9qgPTQkrLrqfRnnzmES6Gsd30HgMX7u1bZNBktNKb4U+WZDq7gOfwUeq/0Aa0ExXlpipdOWc9p/TPISMIvgjDoO8HGSoewPaTSc/3j4BynJCxu2RvndBjDo9R2WqIV9EDpBd4reMc01LqMuvc3Z4CsFB+Stis47xD8DI813ekHl8OKxDZsKuCyJ4tx9StG5YGMJBqgk9V4tpDoBjIf434bc9LWMR1MFBEMfF/eLzTBIc83V95hvugBuDhQyrJAf66jtZF+zBiQvq3xaUA3lf6UnAzycmNAunf7osn9N98y5CnybFRukYR6nkbwXYdZ90MuH5bkfylra55NzXXAyLFcq+J3V3umqIDvt6yaK+/vdk26SA83ZVbsgICqok9bJ9LQp8TLpPc7nwRJOheODR9KDuRuLDYEG3coS8mJJ8D9K2TFZmPTynaOg9oRSEY2m1PVgRXQEAI+ggsOSqhuaOs48ZA3z9U7Qqx36cN</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是2019年对自己的一些要求，可能会实现其中一个，但是写出来才有动力，祝大家今天的计划都能实现，梦还是要有的，万一实现了呢，大家一起努力。
    
    </summary>
    
    
      <category term="计划" scheme="http://www.91change.club/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>浅谈c指针(一)</title>
    <link href="http://www.91change.club/2019/08/21/6/"/>
    <id>http://www.91change.club/2019/08/21/6/</id>
    <published>2019-08-21T11:46:25.000Z</published>
    <updated>2019-09-14T10:50:42.526Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈c语言灵魂——指针"><a href="#浅谈c语言灵魂——指针" class="headerlink" title="浅谈c语言灵魂——指针"></a>浅谈c语言灵魂——指针</h2><meta name="referrer" content="no-referrer"><p>c语言什么最难，当然是指针(Pointer)，c语言之所以强大，以及其自由性，很大部分体现在其灵活的指针运用上。因此，说指针是c语言的灵魂，一点都不为过。</p><a id="more"></a><p>学c语言不学指针，那就等于没学。但是指针又是最难学的，指来指去连自己都指晕了，这也是为什么很对人放弃c语言的原因。</p><h3 id="什么是指针？"><a href="#什么是指针？" class="headerlink" title="什么是指针？"></a>什么是指针？</h3><h5 id="首先想一下下面这段代码的1、2输出是什么？"><a href="#首先想一下下面这段代码的1、2输出是什么？" class="headerlink" title="首先想一下下面这段代码的1、2输出是什么？"></a>首先想一下下面这段代码的1、2输出是什么？</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">int i=100;</span><br><span class="line">printf(&quot;%d\n&quot;,i);     //1</span><br><span class="line">printf(&quot;%d\n&quot;,&amp;i);    //2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了相信大家都有自己的判断了。</p><p><code>int *pi;</code></p><p>上面这个应该 是最基础的了，pi就是指针我们当然知道了，但是你要说它与int pi; 有什么区别，它也没有，因为他也是变量，顶多叫指针声明（不能为叫申明），那他到底有什么意义呢？ 看下面：<br><br><code>pi = &amp;i;</code><br><br><br>这个应该都能看懂吧，通俗点讲就把变量 i 的地址编号赋值给 pi 。<br><br>如：</p><table><thead><tr><th align="center">变量</th><th align="center">内容</th><th align="center">内存地址编号</th></tr></thead><tbody><tr><td align="center">i</td><td align="center">100</td><td align="center">7</td></tr><tr><td align="center">pi</td><td align="center">?</td><td align="center">10</td></tr></tbody></table><p>表格中 ? 该为多少，相信大家都会填，为<strong>7</strong>也就是i的地址编号。也就是说&amp;为取地址号操作，我们就把pi称为指针，所以要记住，指针变量所存的内容为地址编号就行了。</p><p>讲到这，我们再回归到上面的代码1处，都知道1处输出为<strong>100</strong>，那下面这句呢？<br><br><code>printf(&quot;%d\n&quot;,*pi);</code><br><br>这句该怎么理解呢，上面不是说了吗pi就是i的地址编号——即pi的内容就是<strong>7</strong>，所以*pi就是pi所指地址的内容了，也就是 i 内容了100它就等同于1处的代码了。</p><p>这些都是很基础的了，下面将一些难的，</p><h3 id="指针与数组"><a href="#指针与数组" class="headerlink" title="指针与数组"></a>指针与数组</h3><p>一维数组a[i]中的a表示数组名，也可以表示a[0]的地址，它是等同于*a的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;%d\n&quot;,a[i]);</span><br><span class="line">printf(&quot;%d\n&quot;,*(a+i));</span><br></pre></td></tr></table></figure><br>都表示遍历数组a[i]的，但是他们是有区别的<p><strong>a[]和*a的区别：</strong><br><br>char *a 与char a[] 的区别：<br></p><ul><li><p>char *a = “hello” 中的a是指向第一个字符‘h’的一个指针<br></p></li><li><p>char a[20] = “hello” 中数组名a也是执行数组第一个字符‘h’的指针</p></li></ul><p>但二者并不相同：</p><p>如：把两个字符串相加</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6xnfa1hw6j307p060745.jpg" alt></p><p>结果：</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyxl3fw9j303o00j0nz.jpg" alt></p><p>对比：</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyxsigm9j307105y3yd.jpg" alt></p><p>结果：</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyxyh2kej304h00j0m4.jpg" alt></p><p>把字符串加到指针所指的字串上去，出现段错误，<font color="red">本质原因</font>：*d=”0123456789”存放在常量区，是无法修的。而数组是存放在<font color="red">栈</font>中，是可以修改的。两者区别如下：<br><br>一. ”读“ ”写“ 能力</p><ul><li>char *a = “abcd”;  此时”abcd”存放在常量区。通过指针只可以访问字符串常量，而不可以改变它。<br></li></ul><ul><li>而char a[20] = “abcd”； 此时 “abcd”存放在栈。可以通过指针去访问和修改数组内容。<br>二. 赋值时刻</li></ul><ul><li>char *a = “abcd”; 是在编译时就确定了（因为为常量）。</li></ul><ul><li>而char a[20] = “abcd”； 在运行时确定<br>三. 存取效率</li></ul><ul><li>char *a = “abcd”; 存于静态存储区。在栈上的数组比指针所指向字符串快。因此慢</li></ul><ul><li>而char a[20] = “abcd”； 存于栈上。快<br>另外注意：<br>char a[] = “01234”,虽然没有指明字符串的长度，但是此时系统已经开好了，就是大小为6—–’0’ ‘1’ ‘2’ ‘3’ ‘4’ ‘\0’，(注意strlen(a)是不计‘\0’)，也就是说字符串长度为5，但是字符串占有的空间为6。<br></li></ul><p>看一结构中出现的同样的问题：<br>这样红色部分在调用int函数时会出现“Segment Default”, 因为此时 指针n是静态的，只有“读”的本事，不可以改变。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;a href=&quot;#浅谈c语言灵魂——指针&quot; class=&quot;headerlink&quot; title=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;/a&gt;浅谈c语言灵魂——指针&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;c语言什么最难，当然是指针(Pointer)，c语言之所以强大，以及其自由性，很大部分体现在其灵活的指针运用上。因此，说指针是c语言的灵魂，一点都不为过。&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://www.91change.club/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="指针" scheme="http://www.91change.club/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>关于七牛云图床的使用</title>
    <link href="http://www.91change.club/2019/08/19/5/"/>
    <id>http://www.91change.club/2019/08/19/5/</id>
    <published>2019-08-19T11:47:56.000Z</published>
    <updated>2019-09-14T10:50:04.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于七牛云的使用"><a href="#关于七牛云的使用" class="headerlink" title="关于七牛云的使用"></a>关于七牛云的使用</h2><meta name="referrer" content="no-referrer"><p>在网站的访问过程中，由于要使用图片才能显现美观，但图片过多时就会降低网站的访问进程，增加访问的时间，所以我们就要把图片同一处理，放在一个图床里单独访问，但是自己配一个服务器又要钱，买一个云储存对象很贵，这里介绍了七牛云，每个月免费10G的存储空间，非常适合小型博客网站，相册的使用。</p><a id="more"></a><h4 id="1、注册七牛云"><a href="#1、注册七牛云" class="headerlink" title="1、注册七牛云"></a>1、注册<a href="https://portal.qiniu.com/signup" target="_blank" rel="noopener">七牛云</a></h4><p>进入主页点击：<br>为了更直观 我截图来说明</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyu25wo9j30zn0ragoe.jpg" alt="1"></p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyublvw2j314a0jsgng.jpg" alt="2"></p><h4 id="2、创建好后我们可以看到"><a href="#2、创建好后我们可以看到" class="headerlink" title="2、创建好后我们可以看到"></a>2、创建好后我们可以看到</h4><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyuixi01j311x0hwjsu.jpg" alt="3"></p><p> <strong>记住这个域名</strong><br>虽然这旁边有上传文件，把图片上床后就会形成一个URL地址<br>然后你的代码里添加这个URL就可以加载图片了，但是非常麻烦每次都要打开这个网站传，所以这里介绍一个插件PicGo，大家可以到我<a href="https://github.com/jirouping/PicGo" target="_blank" rel="noopener">github</a>上下载。特别感谢PicGo大佬的插件。</p><p>然后配置PicGo插件：</p><p>1、网址为上图里的默认域名 </p><p>2、AK和SK进密钥管理看</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyuusibdj30f70fwq3h.jpg" alt="4"></p><h4 id="Next"><a href="#Next" class="headerlink" title="Next:"></a>Next:</h4><p><img src="http://pwbwgsn9c.bkt.clouddn.com/QQ%E5%9B%BE%E7%89%8720190820194407.png" alt="5"></p><h4 id="配置七牛图床"><a href="#配置七牛图床" class="headerlink" title="配置七牛图床:"></a>配置七牛图床:</h4><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyvzq7r0j30rx0ftjsu.jpg" alt="6"></p><p>配置好后进去上传区，上传图片。然后在相册区复制不同类型的URL</p><p>这就是一些七牛云的操作。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于七牛云的使用&quot;&gt;&lt;a href=&quot;#关于七牛云的使用&quot; class=&quot;headerlink&quot; title=&quot;关于七牛云的使用&quot;&gt;&lt;/a&gt;关于七牛云的使用&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;在网站的访问过程中，由于要使用图片才能显现美观，但图片过多时就会降低网站的访问进程，增加访问的时间，所以我们就要把图片同一处理，放在一个图床里单独访问，但是自己配一个服务器又要钱，买一个云储存对象很贵，这里介绍了七牛云，每个月免费10G的存储空间，非常适合小型博客网站，相册的使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="七牛云" scheme="http://www.91change.club/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
      <category term="插件" scheme="http://www.91change.club/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="PicGo" scheme="http://www.91change.club/tags/PicGo/"/>
    
  </entry>
  
  <entry>
    <title>yilia主题的一些配置问题</title>
    <link href="http://www.91change.club/2019/08/17/4/"/>
    <id>http://www.91change.club/2019/08/17/4/</id>
    <published>2019-08-17T04:02:21.000Z</published>
    <updated>2019-09-14T10:49:29.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="页面点击爱心和网站访问数量的实现"><a href="#页面点击爱心和网站访问数量的实现" class="headerlink" title="页面点击爱心和网站访问数量的实现"></a>页面点击爱心和网站访问数量的实现</h2><meta name="referrer" content="no-referrer"><p>为了完善自己更好看的博客，对原始主题进行了一些小的修改</p><a id="more"></a><h5 id="页面点击出现爱心的实现"><a href="#页面点击出现爱心的实现" class="headerlink" title="页面点击出现爱心的实现"></a>页面点击出现爱心的实现</h5><p>在这里我加了一些js代码让页面显示更炫酷，文件我上传到了<u><a href="https://github.com/jirouping/yilia-love/blob/master/love.js" target="_blank" rel="noopener"><strong>我的github</strong></a></u>里大家可以复制下来，然后新建一个<u><strong><em>love.js</em></strong></u>文件加在<font color="orange" size="4">\blog\themes\yilia\source</font>里，接着在你的<font color="orange" size="4">\blog\themes\yilia\layout\_partial\footer.ejs</font>的最后面加入以下代码：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="页面访问次数的实现"><a href="#页面访问次数的实现" class="headerlink" title="页面访问次数的实现"></a>页面访问次数的实现</h4><p>这里我是使用<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>来实现的，首先同在你的<font color="orange" size="4">\blog\themes\yilia\layout_partial\footer.ejs</font>加入如下代码：</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyt0jmtrj30on0abgma.jpg" alt="busuanzzi.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 自己加一个div</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line"> 本站访客数：&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人 |</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">本文总阅读量：&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>再在最后加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>最后面实现：<br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyt964mcj30kd02imx0.jpg" alt="QQ图片20190817202810.png"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;页面点击爱心和网站访问数量的实现&quot;&gt;&lt;a href=&quot;#页面点击爱心和网站访问数量的实现&quot; class=&quot;headerlink&quot; title=&quot;页面点击爱心和网站访问数量的实现&quot;&gt;&lt;/a&gt;页面点击爱心和网站访问数量的实现&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;为了完善自己更好看的博客，对原始主题进行了一些小的修改&lt;/p&gt;
    
    </summary>
    
    
      <category term="yilia" scheme="http://www.91change.club/tags/yilia/"/>
    
      <category term="hexo" scheme="http://www.91change.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>考研日常记</title>
    <link href="http://www.91change.club/2019/08/16/3/"/>
    <id>http://www.91change.club/2019/08/16/3/</id>
    <published>2019-08-16T14:18:43.000Z</published>
    <updated>2019-09-14T10:49:13.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="梦里花落知多少"><a href="#梦里花落知多少" class="headerlink" title="梦里花落知多少"></a>梦里花落知多少</h2><meta name="referrer" content="no-referrer"><p>积极的人在每一次忧患中都看到一个机会，而消极的人则在每个机会都会看某种忧患</p><a id="more"></a><p>今天又慌废了一天，我想大概是我校园卡掉了的原因，心情特别不好，下午在教室总是心在焉。大概我就是消极的人，每次有一点不好的事情都会忧心忡忡，可能与性格相关，单身加计算机专业宅男，还很内向，不好交流，每次的所见所感都是talk to myself。<br><br>想到一个有意思的单词前天在看朱伟老师的单词视频 —— Independent，所以可以叫我Mr.Independent吧<br><br><br><br></p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyr1ts9ej31o0142n2e.jpg" alt="arch-arch-bridge-backlit-931911.jpg"></p><br><p>回到寝室写了篇博客记录下，心情好了点，这大概就是所谓的发泄吧，把自己的心情写给陌生的网友看，我不像一些QQ好友一样鸡毛蒜皮的小事也会发一个说说来言于他人，我可是高贵的强者。<br><br></p><p>所以不管干什么都会又压力，有挫折，但要去发泄出来才能换来明天的好心情。<br><br><br>祝愿明天有个好心情，考研路上很多绊脚石，只有一点一点来，按自己的思路来。</p><p>物是人非事事休，欲语泪先流。<br>最后记录一首卢前的词——《梦花落知多少》：<br><br><br>记得当时年纪小，你爱谈天我爱笑，有一回并肩坐在桃树下，风在树梢鸟在叫，我不知怎样睡着了，梦里花落知多少。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;梦里花落知多少&quot;&gt;&lt;a href=&quot;#梦里花落知多少&quot; class=&quot;headerlink&quot; title=&quot;梦里花落知多少&quot;&gt;&lt;/a&gt;梦里花落知多少&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;积极的人在每一次忧患中都看到一个机会，而消极的人则在每个机会都会看某种忧患&lt;/p&gt;
    
    </summary>
    
    
      <category term="考研" scheme="http://www.91change.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="感悟" scheme="http://www.91change.club/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="Independent" scheme="http://www.91change.club/tags/Independent/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客的搭建之旅</title>
    <link href="http://www.91change.club/2019/08/12/first/"/>
    <id>http://www.91change.club/2019/08/12/first/</id>
    <published>2019-08-12T13:01:37.000Z</published>
    <updated>2019-09-14T10:48:34.650Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-阿里云（centos7-x）-git"><a href="#hexo-阿里云（centos7-x）-git" class="headerlink" title="hexo+阿里云（centos7.x）+git"></a>hexo+阿里云（centos7.x）+git</h2><meta name="referrer" content="no-referrer"><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>拥有个人的博客是每个程序员的想法，我也一样所以看到最近看到hexo的博客，心血来潮，查一下，hexo是一个轻量的博客框架，</p><a id="more"></a><p>对于一个没学过数据库，只自学一点mysql和php的嵌入式的同学非常方便。之前也用过LAMP+腾讯云的方式搭建过wordpress博客，这个博客有后台数据库等（搭建很简单），但死于主题的选择，换了博客，个人感觉hexo主题比较美观可以自己添加很多功能所以选择这个轻量级的博客。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>虽然hexo的简便，但是安装起来可是花费我好几天的时间，比wordpress难。所以写了一个小结，帮助后面的小伙伴们安装。</p><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="(1)准备工作"></a>(1)准备工作</h3><h4 id="先从本地环境开始安装需要的配置-我的电脑是Win10-64位"><a href="#先从本地环境开始安装需要的配置-我的电脑是Win10-64位" class="headerlink" title="先从本地环境开始安装需要的配置(我的电脑是Win10  64位)"></a>先从本地环境开始安装需要的配置(我的电脑是Win10  64位)</h4><p> <font color="#FF0000" size="4"><strong>需要安装的:</strong></font></p><ul><li><p>Git：<a href="https://git-scm.com/" title="Git官网" target="_blank" rel="noopener">https://git-scm.com/</a></p></li><li><p>Notepad++：你喜欢用什么就用什么(记事本也行但是后面改东西时会很乱）这里我推荐用Notepad++</p></li><li><p>Node.js：<a href="http://nodejs.cn/download/" title="Node.js下载" target="_blank" rel="noopener">http://nodejs.cn/download/</a> </p></li><li><p>npm：npm是node的模块管理工具，淘宝镜像地址(<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org</a>/)</p></li></ul><p>你还要有github账号(没有就去申请)</p><h4 id="下载完后需要进行配置-这里就不多讲了自己查查资料很简单的"><a href="#下载完后需要进行配置-这里就不多讲了自己查查资料很简单的" class="headerlink" title="下载完后需要进行配置(这里就不多讲了自己查查资料很简单的)"></a>下载完后需要进行配置(这里就不多讲了自己查查资料很简单的)</h4><p>安装完成的截图：<br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyksiy8tj30g70dfaap.jpg" alt="1"></p><p>当出现上图时表示安装好了  Next！</p><h3 id="2-服务器环境搭建"><a href="#2-服务器环境搭建" class="headerlink" title="(2)服务器环境搭建"></a>(2)服务器环境搭建</h3><ul><li><h4 id="第一步安装Git-好像Ubuntu自带git，没用过带哥们可以试试"><a href="#第一步安装Git-好像Ubuntu自带git，没用过带哥们可以试试" class="headerlink" title="第一步安装Git(好像Ubuntu自带git，没用过带哥们可以试试)"></a>第一步安装Git(好像Ubuntu自带git，没用过带哥们可以试试)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git --version  //如果有就不用安装直接跳过这一步</span><br><span class="line">yum install git</span><br></pre></td></tr></table></figure></li><li><h4 id="创建git用户"><a href="#创建git用户" class="headerlink" title="创建git用户"></a>创建git用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd git     //创建用户</span><br><span class="line">passwd git     //设置密码</span><br><span class="line">su git               //切换用户</span><br><span class="line">cd /home/git/</span><br><span class="line">mkdir -p projects/blog          //项目的目录</span><br><span class="line">mkdir repos &amp;&amp;cd repos      </span><br><span class="line">git init --bare blog.git           //创建一个空的仓库</span><br><span class="line">cd  blog.git/hooks         </span><br><span class="line">vim  post-receive                 //创建一个钩子函数</span><br></pre></td></tr></table></figure></li></ul><p>输入下面的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>输入完后修改权限，输入下面命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br><span class="line">exit   //退出登录  </span><br><span class="line">chown -R git:git /home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p><font color="#FF0000" size="5"><strong><em>注：</em></strong></font><br><font color="#FF0000" size="4"><em>由于没有在etc/sudoers里面添加git     ALL=(ALL)       ALL，所以有的命令不能使用，只能严格按照前面的来</em></font></p><p>全部弄好后就要测试下了：<br>首先你要在一个空白地方建立一个你要clone下git仓库的文件夹如：B:/test然后在本地用Git进入你的文件夹，然后执行下面的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@你的服务器ip:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p>出现下图就算成功了</p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wymai9kvj30h6095gls.jpg" alt="2"><br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wymh71c9j30kp0eg3zd.jpg" alt="3"></p><h3 id="3-建立ssh信任"><a href="#3-建立ssh信任" class="headerlink" title="(3)建立ssh信任"></a>(3)建立ssh信任</h3><p>创建公共秘钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;      //你的github名字，如我的：jirouping</span><br><span class="line">git config --global user.email &quot;youremail&quot;      //你的github绑定的邮箱，如你注册使用的QQ邮箱</span><br></pre></td></tr></table></figure><p>然后不用管直接回车，next：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>生成的<font color="#FF0000"><strong>.ssh</strong></font>文件，在你电脑里找，一般在C:/user/…下，不同的电脑不一样<br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wymxjob5j30oc072jrs.jpg" alt="4"></p><p>看到上图就可以了接着建立信任了在本地的Git Bash上输入： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i C:/Users/yourname/.ssh/id_rsa.pub git@server_ip</span><br><span class="line">ssh git@server_ip // 测试能否登录</span><br></pre></td></tr></table></figure><p><font color="#FF0000" size="3">这时候可以连接你的服务器了是不要密码的！否则就检查下上面的步骤</font><br>当成功连接后，我们知道了以后就可以通过ssh来连接你的服务，虽然不是在root下，但还是存在问题</p><p>那我们就用可以设置限制git用户登录让他只能传输和clone文件<br>在服务器上操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells           // 查看`git-shell`是否在登录方式里面，有则跳过</span><br><span class="line">which git-shell         // 查看是否安装</span><br><span class="line">vim /etc/shells</span><br><span class="line">在后面添加上2步显示出来的路劲，通常在 /usr/bin/git-shell</span><br></pre></td></tr></table></figure><p>然后修改下<font color="#FF0000">/etc/passwd/</font>的权限，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /etc</span><br><span class="line">vim passwd         </span><br><span class="line">修改原来的：</span><br><span class="line">git:x:1000:1000::/home/git:/bin/bash</span><br><span class="line"></span><br><span class="line">改成：</span><br><span class="line">git:x:1000:1000::/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><h3 id="4-搭建nginx服务器"><a href="#4-搭建nginx服务器" class="headerlink" title="(4)搭建nginx服务器"></a>(4)搭建nginx服务器</h3><ul><li>安装和启动nginx:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx -y       //安装</span><br><span class="line">systemctl start nginx     //这是CentOs7.x启动方式，也有其他的如：./nginx</span><br><span class="line">systemctl enable nginx     //设置开机自启</span><br></pre></td></tr></table></figure></li></ul><p>装好后，就可访问你的界面了（出现什么welcome tonginx一个蓝色框就对了）注意看英文（很简单的应该都看得懂）里面有nginx的配置文件的路径记下来，一般是/etc/nginx/nginx.conf ,如果是其他版本的自己注意下页面里的内容。</p><ul><li>修改配置文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop // 先停止nginx</span><br><span class="line">cd /etc/nginx</span><br><span class="line">vim nginx.conf</span><br><span class="line"></span><br><span class="line">修改 root 解析路径，如下图</span><br><span class="line">同时将 user 改为 root 如下图，不然nginx无法访问 /home/git/project/blog</span><br><span class="line"></span><br><span class="line">systemctl start nginx      //启动nginx</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyn808smj30ce07uaaa.jpg" alt="5"></p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyniz0isj30js0c1gmh.jpg" alt="6"></p><p>到此服务器端就算好了！！</p><h3 id="5-Hexo博客的安装"><a href="#5-Hexo博客的安装" class="headerlink" title="(5)Hexo博客的安装"></a>(5)Hexo博客的安装</h3><ul><li>安装hexo<br>在git-for-windows上面运行下面的语句（git-for-windows版本要高于2.12）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g      #使用全局设置下载、安装hexo至默认的文件夹</span><br><span class="line">hexo init blog                      #在当前文件夹下初始化一个blog项目，从远程git仓库拷贝</span><br><span class="line">cd blog                                 #进入blog</span><br><span class="line">npm install                           #安装指定模块，package.json指定</span><br><span class="line">hexo g</span><br><span class="line">hexo server                          #打开服务</span><br></pre></td></tr></table></figure></li></ul><p>用浏览器打开：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 出现下面这样就好了<br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wynsww04j30y80gdaio.jpg" alt="7"></p><p>在package.json文件中添加npm脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;deploy&quot;: &quot;hexo clean &amp;&amp; hexo g -d&quot;,</span><br><span class="line">  &quot;start&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyo2o6yej30ii09xdg8.jpg" alt="8"></p><p>然后直接用npm命令就可以本地调试和上传服务器了<br>本地调试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run start</span><br></pre></td></tr></table></figure><p>修改博客主目录的配置文件：_config.yml来上传至服务器<br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyorc8kej30gd059t8w.jpg" alt="10"></p><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wyoevb84j30k004kdg2.jpg" alt="9"></p><p>直接照着上图填开始deploy属性里面只有type，后面的repo和branch是自己添加上去的（别慌，不要以为自己没下完整）<br><font color="#FF0000" size="6"><strong><em>注：</em></strong></font>在deploy里添加东西时之间要加空格 (<font color="#FF0000"><strong><em>如:git与:之间有空格</em></strong></font>)没加就会出错，传不到服务器</p><p>然后上传服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><p>浏览器访问下你的域名和ip就可以看到了</p><p>故事到这接结束了，花了我好几天总算有点成果了，希望对你有帮助</p><h2 id="有问题可以加我一起讨论。"><a href="#有问题可以加我一起讨论。" class="headerlink" title="有问题可以加我一起讨论。"></a>有问题可以加我一起讨论。</h2><div align="center"> <img src="https://ws1.sinaimg.cn/large/006p97Wqgy1g6wypad78sj30ks0k9aeg.jpg" width="300"></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo-阿里云（centos7-x）-git&quot;&gt;&lt;a href=&quot;#hexo-阿里云（centos7-x）-git&quot; class=&quot;headerlink&quot; title=&quot;hexo+阿里云（centos7.x）+git&quot;&gt;&lt;/a&gt;hexo+阿里云（centos7.x）+git&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;拥有个人的博客是每个程序员的想法，我也一样所以看到最近看到hexo的博客，心血来潮，查一下，hexo是一个轻量的博客框架，&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.91change.club/tags/hexo/"/>
    
      <category term="阿里云" scheme="http://www.91change.club/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
</feed>
