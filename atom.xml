<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长歌|91Change</title>
  
  <subtitle>庐山烟雨浙江潮，未到千般恨不消  及至到来无一事，庐山烟雨浙江潮</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.91change.club/"/>
  <updated>2020-03-06T03:24:40.535Z</updated>
  <id>http://www.91change.club/</id>
  
  <author>
    <name>长长长长歌丶</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录人生第一次收获offer的艰辛</title>
    <link href="http://www.91change.club/2020/03/06/ex/"/>
    <id>http://www.91change.club/2020/03/06/ex/</id>
    <published>2020-03-06T00:44:01.000Z</published>
    <updated>2020-03-06T03:24:40.535Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是疫情期间自己的面试经验，充满艰辛和收获。也遇到很多很多应聘中的一些复杂的事。
    
    </summary>
    
    
      <category term="面试" scheme="http://www.91change.club/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="经验" scheme="http://www.91change.club/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>GCC程序编译</title>
    <link href="http://www.91change.club/2020/02/24/linux-1/"/>
    <id>http://www.91change.club/2020/02/24/linux-1/</id>
    <published>2020-02-24T09:09:45.000Z</published>
    <updated>2020-03-02T12:34:39.191Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GCC程序编译"><a href="#GCC程序编译" class="headerlink" title="GCC程序编译"></a>GCC程序编译</h2><p>Linux系统下的gcc(GNU C Compiler)是GNU推出的功能强大、性能优越的多平台编译器，它的执行效率比一般编译器要高20%~30%</p><a id="more"></a><p>GCC编译程序时，编译过程只可以被细分为四个阶段：<strong>预处理、编译、汇编、链接</strong></p><h3 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h3><p>Gcc通过后缀来区别输入文件的类别：</p><ul><li>.c：源代码文件</li><li>.a：由目标文件构成的库文件</li><li>.C,.cc,.cxx：c++源码文件</li><li>.h：头文件</li><li>.i：已处理过的c源代码文件</li><li>.ii：已预处理过的c++源文件</li><li>.o：编译后的目标文件</li><li>.s：汇编语言源代码文件</li><li>.S：经过预编译的汇编语言源代码文件</li></ul><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>基本用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc [options] [filenames]</span><br></pre></td></tr></table></figure><p>编译选项</p><ul><li>-o output_filename：确定可执行文件的名称，如果没有gcc就给出预设的可执行a.out</li><li>-c：只编译，不链接为可执行文件生成.o为后缀的目标文件</li><li>-g：产生调试工具（GNU的gdb）所必要的符号信息，主要是调试用的命令</li><li>-O：对程序进行优化编译、链接，在编译、链接过程中进行优化处理，这样产生的可执行文件执行效率可以提高，但是速度会慢。</li><li>O2：比-O更好的优化，但是速度会更慢</li><li>-Idirname：将dirname所指的目录加入程序头文件目录中</li><li>Lname：在链接时，装载”libname.a”的函数库，如gcc foo.c -L/home/lib -lfoo -o foo</li><li>-static：静态链接，gcc -static hello.c -o hello</li></ul><p>静态链接和动态链接<br>使用静态库时，连接器找出程序所需的函数，然后将它们拷贝到可执行文件，一旦连接成功，静态程序库也就不再需要了。然而，在动态库中，动态库会在执行程序内留下一个标志指明当程序执行时，首先必须载入这个库，从而节省空间。一般在linux中默认都是动态库。</p><ul><li>-Wall：生成所有警告信息</li><li>-w：不生成任何警告信息</li><li>DWACRO：定义MACRO宏，等效于在程序中使用#define MACRO</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;GCC程序编译&quot;&gt;&lt;a href=&quot;#GCC程序编译&quot; class=&quot;headerlink&quot; title=&quot;GCC程序编译&quot;&gt;&lt;/a&gt;GCC程序编译&lt;/h2&gt;&lt;p&gt;Linux系统下的gcc(GNU C Compiler)是GNU推出的功能强大、性能优越的多平台编译器，它的执行效率比一般编译器要高20%~30%&lt;/p&gt;
    
    </summary>
    
    
      <category term="Gcc" scheme="http://www.91change.club/tags/Gcc/"/>
    
      <category term="Linux" scheme="http://www.91change.club/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>51单片机</title>
    <link href="http://www.91change.club/2019/12/30/c51-2/"/>
    <id>http://www.91change.club/2019/12/30/c51-2/</id>
    <published>2019-12-30T05:53:17.000Z</published>
    <updated>2020-02-24T09:16:05.904Z</updated>
    
    <content type="html"><![CDATA[<h2 id="51单片机学习之路-2"><a href="#51单片机学习之路-2" class="headerlink" title="51单片机学习之路(2)"></a>51单片机学习之路(2)</h2><meta name="referrer" content="never">每天学习一点单片机，先从51开始，边听郭天祥的视频，边看是自学发现还可以。<a id="more"></a><h3 id="由于图片可能显示不出来看博客https-blog-csdn-net-makejiec-article-details-103774296"><a href="#由于图片可能显示不出来看博客https-blog-csdn-net-makejiec-article-details-103774296" class="headerlink" title="由于图片可能显示不出来看博客https://blog.csdn.net/makejiec/article/details/103774296"></a>由于图片可能显示不出来看博客<a href="https://blog.csdn.net/makejiec/article/details/103774296" target="_blank" rel="noopener">https://blog.csdn.net/makejiec/article/details/103774296</a></h3><p>昨天，只是熟悉下c51编程的基础，像我学了好几年的c语言就只用看看与标准c差别就行了，其实差别不是很大，会c语言的一些简单的语法完全够了。<br>由于没有板子，这里则是基于keil μVision5+Proteus模拟调试的</p><ul><li>首先装好这另两个软件，在前面已经提供了<a href="http://www.91change.club/2019/12/29/c51-1/#more"><font color="red" size="5">链接</font></a> <br><br><a href="https://mp.weixin.qq.com/s/T7A7xFRKTglRHZVKLtm4EA" target="_blank" rel="noopener"><font color="green" size="5">keil μVision5an安装教程</font></a>　　　　　<a href="https://mp.weixin.qq.com/s/3C_NZw7CJ_7SmAqtBIOv9Q" target="_blank" rel="noopener"><font color="green" size="5">Proteus安装教程</font></a><br><br><font color="red" size="4">这里Proteus在后面画图是总是出现闪退</font></li><li><strong>解决方法</strong>：<br><br>找到下面的文件 将他们全部复制到</li></ul><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7l6pvuo8j30qr0dgjz1.jpg" alt="c1"></p><p> 将他们全部复制到<font color="red" size="5">C:\ProgramData\Labcenter Electronics\Proteus 8 Professional\MODELS</font>下</p><p><img src="https://tvax3.sinaimg.cn/large/006p97Wqgy1gc7l98kix4j30s50fs7er.jpg" alt="c2"></p><p>替换已存在的文件，闪退就可以解决来了。<br></p><ul><li>安装完成<br></li></ul><p><img src="https://tva4.sinaimg.cn/large/006p97Wqgy1gc7la1g7f7j308c04ft90.jpg" alt="c3"></p><h4 id="下面就开始写第一个单片机程序"><a href="#下面就开始写第一个单片机程序" class="headerlink" title="下面就开始写第一个单片机程序"></a>下面就开始写第一个单片机程序</h4><ul><li><h3>新建工程</h3></li></ul><p><img src="https://tvax4.sinaimg.cn/large/006p97Wqgy1gc7laeudpzj30o909t41i.jpg" alt="c4"></p><p><img src="https://tvax1.sinaimg.cn/large/006p97Wqgy1gc7lau1hjij30lq0gbn2g.jpg" alt="c5"></p><ul><li><h3>新建一个文件，并把它添加到工程中</h3>Ctrl+N新建一个文件，并且保存为.c的后缀</li></ul><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7lb4qw1sj30l00fj0ws.jpg" alt="c6"></p><p>选择刚才创建的test.c文件</p><p><img src="https://tvax2.sinaimg.cn/large/006p97Wqgy1gc7lbpbyl9j30jo0e8wik.jpg" alt="c7"></p><ul><li><h3> 可以写代码了 </h3></li></ul><p><img src="https://tva4.sinaimg.cn/large/006p97Wqgy1gc7lc1jinpj30vh0imjy2.jpg" alt="c8"></p><br><br>**我这里的代码是控制6个数码管的循环点亮**- <h3>使用Proteus仿真画电路图</h3><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7lcjyxwhj311o0kltno.jpg" alt="c9"></p><p><img src="https://tvax4.sinaimg.cn/large/006p97Wqgy1gc7lcvkl5qj30m40hltax.jpg" alt="c10"></p><br><br>**接着一路点击Next到finish**<p><img src="https://tva2.sinaimg.cn/large/006p97Wqgy1gc7ld5mb4tj316x0q7wty.jpg" alt="c11"></p><ul><li><h3>画出你的电路图</h3></li></ul><p><img src="https://tva2.sinaimg.cn/large/006p97Wqgy1gc7ldi1uuwj30x20k0wtj.jpg" alt="c12"></p><ul><li><h3>将代码编译生成十六进制文件导入原理图中</h3></li></ul><p><img src="https://tva2.sinaimg.cn/large/006p97Wqgy1gc7ldqvor6j30vr0nc47h.jpg" alt="c13"></p><p><img src="https://tva2.sinaimg.cn/large/006p97Wqgy1gc7le757fpj31360kv1d3.jpg" alt="c14"></p><ul><li><h3>运行效果</h3></li></ul><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7lej2oqfg30ws0j44qp.gif" alt></p><h1 id="上述代码如下："><a href="#上述代码如下：" class="headerlink" title="上述代码如下："></a>上述代码如下：</h1><pre><code>#include&lt;red52.h&gt;#define uint unsigned int #define uchar unsigned char sbit wei = P2^7;    //位选sbit duan = P2^6;   //段选uchar code table[]={0x3f, 0x06, 0x5b, 0x4f,                   /*0*/ /*1*/ /*2*/ /*3*/                    0x66, 0x6d, 0x7d, 0x07,                   /*4*/ /*5*/ /*6*/ /*7*/                    0x7f, 0x6f, 0x77, 0x7c,                   /*8*/ /*9*/ /*A*/ /*b*/                    0x39, 0x5e, 0x79, 0x71                   /*C*/ /*d*/ /*E*/ /*F*/};  //字符0~f table表uchar num;uchar i;void delay(uint z);int main(void){    uchar count = 0;    uchar flag = 0x01;      while(1)    {        wei = 1;        P0 = ~flag;        wei = 0;         for(num = 0; num &lt; 16; num++)        {            duan = 1;            P0 = table[num];            duan = 0;            delay(100);        }        flag = flag &lt;&lt; 1;        count++;        if(count &gt;= 6)        {            flag = 0x01;            count = 0;        }    }}void delay(uint z)  //延迟{    uint x, y;    for(x=z; x&gt;0; x--)        for(y=110; y&gt;0; y--);}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;51单片机学习之路-2&quot;&gt;&lt;a href=&quot;#51单片机学习之路-2&quot; class=&quot;headerlink&quot; title=&quot;51单片机学习之路(2)&quot;&gt;&lt;/a&gt;51单片机学习之路(2)&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;never&quot;&gt;
每天学习一点单片机，先从51开始，边听郭天祥的视频，边看是自学发现还可以。
    
    </summary>
    
    
      <category term="51单片机" scheme="http://www.91change.club/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="嵌入式" scheme="http://www.91change.club/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>重新学习51单片机</title>
    <link href="http://www.91change.club/2019/12/29/c51-1/"/>
    <id>http://www.91change.club/2019/12/29/c51-1/</id>
    <published>2019-12-29T07:08:53.000Z</published>
    <updated>2020-02-24T09:00:57.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="51单片机学习之路-1"><a href="#51单片机学习之路-1" class="headerlink" title="51单片机学习之路(1)"></a>51单片机学习之路(1)</h2><meta name="referrer" content="no-referrer"><p>51单片机虽然已经出现了30年，但在使用上还是很广泛，市场上也出现一大推以8051为核心的一批单片机系统</p><a id="more"></a><p>大三期间学过单片机，主要是用汇编代码写的51代码，最近的毕业设计选择的题目是基于51单片机开发，不过都是用C语言开发的。于是重新学习一下单片机：</p><p><font color="red" size="5">首先分享资料</font>：<a href="https://pan.baidu.com/s/1DmQB5Qf-F06jg8ZKjawS_w" target="_blank" rel="noopener">keil μvVision5链接 </a>提取码：<font color="green" size="5"> xgjx </font></p><p><a href="https://pan.baidu.com/s/1osu-R5T98ShACMxWbdm66w" target="_blank" rel="noopener">Proteusz仿真链接</a> 提取码: <font color="green" size="5"> 4ktm </font></p><h4 id="c51编译器支持的数据结构"><a href="#c51编译器支持的数据结构" class="headerlink" title="c51编译器支持的数据结构"></a>c51编译器支持的数据结构</h4><meta name="referrer" content="no-referrer"><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1gadqd4viupj30gn0b274e.jpg" alt="bdc60b2eb6a43448ee6e5d887191fdd9.png"></p><h4 id="51单片机使用的c语言的存储器类型"><a href="#51单片机使用的c语言的存储器类型" class="headerlink" title="51单片机使用的c语言的存储器类型"></a>51单片机使用的c语言的存储器类型</h4><p><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1gadqfkb6l9j30er06gmx5.jpg" alt="6466a0aa00167bce5417367ac2182bc4.png"></p><p>这里的编译器是keil公司开发的 keil Vision5的IDE<br>，如下：<br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1gadqzszn1gj313k0og42b.jpg" alt="QQ图片20191229180157.png"></p><p>作为初学者看书是很枯燥的最好是看视频，这里推荐郭天祥的视频，讲的很好<a href="https://www.bilibili.com/video/av61979588?p=1" target="_blank" rel="noopener">十天学会51单片机</a></p><p>最好买一块板子，看了下淘宝100左右，如果没有板子那只有proteus仿真了</p><p>安装过程就不用介绍了。</p><p>最后看了一下书 发现c51对ANSI c有一些差异在库函数上有一些差异，具体在c51提供的库函数文档里面都有，在写代码时应该看看<br><img src="https://ws1.sinaimg.cn/large/006p97Wqgy1gadt4sa5wfj30z30kxmym.jpg" alt="QQ图片20191229191557.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;51单片机学习之路-1&quot;&gt;&lt;a href=&quot;#51单片机学习之路-1&quot; class=&quot;headerlink&quot; title=&quot;51单片机学习之路(1)&quot;&gt;&lt;/a&gt;51单片机学习之路(1)&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;51单片机虽然已经出现了30年，但在使用上还是很广泛，市场上也出现一大推以8051为核心的一批单片机系统&lt;/p&gt;
    
    </summary>
    
    
      <category term="51单片机" scheme="http://www.91change.club/tags/51%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="嵌入式" scheme="http://www.91change.club/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>KMP算法</title>
    <link href="http://www.91change.club/2019/11/21/13/"/>
    <id>http://www.91change.club/2019/11/21/13/</id>
    <published>2019-11-21T15:22:16.000Z</published>
    <updated>2020-02-24T09:12:18.696Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模式匹配算法——KMP"><a href="#模式匹配算法——KMP" class="headerlink" title="模式匹配算法——KMP"></a>模式匹配算法——KMP</h2><meta name="referrer" content="no-referrer"><p>今天在看书数据结构关于模式匹配的算法看到一个改进的算法，想起了之前在力扣上一道算法题就研究了一番</p><a id="more"></a><p>不解释直接上代码：<br></p><pre><code>/*KMP算法*/#include&lt;stdio.h&gt;#include&lt;string.h&gt;void get_next(char *T,int *next);int Index_KMP(char *S, char *T, int pos);int pos = 0;int next[10];      //next数组char T[10] = &quot;abc&quot;;char S[20] = &quot;ccccccdabcefg&quot;;int main(void){    //char S[LEN_1_SIZE];   // T[LEN_2_SIZE];    int x;    /*printf(&quot;输入主串长度：&quot;);        scanf(&quot;%d&quot;,&amp;n);    printf(&quot;输入主串：&quot;);    fgets(S, n, stdin);        printf(&quot;输入模式串长度：&quot;);    scanf(&quot;%d&quot;,&amp;m);    printf(&quot;输入模式串：&quot;);    fgets(T, m, stdin);*/    get_next(T, next);    x = Index_KMP(S, T, pos);    if(x != 0)    {        printf(&quot;在主串第%d处\n&quot;, x);    }    else    {        printf(&quot;failed\n&quot;);    }}/*获取next数组*/void get_next(char *T,int *next){    int i = 1, j = 0;    next[0]=next[1] = 0;    while(i &lt; (int)strlen(T))    {        if(j == 0|| T[i] == T[j])            {            next[++i] = ++j;        }        else            j = next[j];    }}int Index_KMP(char *S, char *T, int pos){    int j = 1, i = pos;    while(i &lt;= (int)strlen(S) &amp;&amp; j &lt;= (int)strlen(T))    {        if(j == 0 || S[i] == T[j - 1])        {            ++i;            ++j;            }        else            j = next[j];    }    if(j &gt; (int)strlen(T))         return i - strlen(T) + 1;    else        return 0;}</code></pre><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7lej2oqfg30ws0j44qp.gif" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;模式匹配算法——KMP&quot;&gt;&lt;a href=&quot;#模式匹配算法——KMP&quot; class=&quot;headerlink&quot; title=&quot;模式匹配算法——KMP&quot;&gt;&lt;/a&gt;模式匹配算法——KMP&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;今天在看书数据结构关于模式匹配的算法看到一个改进的算法，想起了之前在力扣上一道算法题就研究了一番&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.91change.club/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.91change.club/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="模式匹配" scheme="http://www.91change.club/tags/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>经典排序算法</title>
    <link href="http://www.91change.club/2019/11/20/12/"/>
    <id>http://www.91change.club/2019/11/20/12/</id>
    <published>2019-11-20T14:33:55.000Z</published>
    <updated>2020-02-28T09:16:31.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="经典排序算法"><a href="#经典排序算法" class="headerlink" title="经典排序算法"></a>经典排序算法</h2><meta name="referrer" content="no-referrer"><a id="more"></a><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><pre><code>/*冒泡排序思想：从无序序列头部开始，进行两两比较，根据大小交换位置，直到最后将最大（小）的数据元素交换到了无序队列的队尾，从而成为有序序列的一部分；下一次继续这个过程，直到所有数据元素都排好序。算法的核心在于每次通过两两比较交换位置，选出剩余无序序列里最大（小）的数据元素放到队尾。冒泡排序的平均时间复杂度为O(n^2)    */#include&lt;stdio.h&gt;#define num 6int main(void){    int i,j,n;    int flag;    int a[num];    for(i = 0; i &lt; num; i++)    {        scanf(&quot;%d&quot;, &amp;a[i]);    }    for(i = 1; i &lt; num; i++)    {        flag = 0;        for(j = 0; j &lt; num - i; j++)        {            if(a[j] &gt; a[j+1])            {                a[j] = a[j] + a[j+1];                a[j+1] = a[j] - a[j+1];                a[j] = a[j] - a[j+1];                flag = 1;            }        }         if(!flag) break;    }    for(i = 0; i &lt; num; i++)        printf(&quot;%d &quot;,a[i]);    printf(&quot;\n&quot;);}</code></pre><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><pre><code>/*归并排序*/#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define NUM 20typedef int ElemType;void MergeSort(ElemType s[], int low, int hight);void Merge(ElemType s[], int low, int mid, int hight);int Buff[20] = {0};int n;int main(void){    int a[NUM], low, hight, i, n;    printf(&quot;请输入要排序的个数（小于20）：&quot;);    scanf(&quot;%d&quot;, &amp;n);    for(i = 0; i &lt; n; i++)    {        scanf(&quot;%d&quot;, &amp;a[i]);    }    low = 0;    hight = n-1;    MergeSort(a, low, hight);    for(i = 0; i &lt; n; i++)    {        printf(&quot;%d &quot;, a[i]);    }    printf(&quot;\n&quot;);}void MergeSort(ElemType s[], int low, int hight){    if(low &lt; hight){        int mid = (low + hight) / 2;        MergeSort(s, low, mid);        MergeSort(s, mid+1, hight);        Merge(s, low, mid, hight);    }}void Merge(ElemType s[], int low, int mid, int hight){    int flag, i ,j;    for(flag = low; flag &lt;= hight; flag++)        Buff[flag] = s[flag];    for(i = low, j = mid + 1, flag = i; i &lt;= mid &amp;&amp; j &lt;= hight; flag++)    {        if(Buff[i] &lt;= Buff[j])            s[flag] = Buff[i++];        else            s[flag] = Buff[j++];        //s[flag] = Buff[i] &lt;= Buff[j] ? Buff[i++] : Buff[j++];    }    if(i &lt;= mid)         s[flag++] = Buff[i++];    if(j &lt;= hight)        s[flag++] = Buff[j++];}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;经典排序算法&quot;&gt;&lt;a href=&quot;#经典排序算法&quot; class=&quot;headerlink&quot; title=&quot;经典排序算法&quot;&gt;&lt;/a&gt;经典排序算法&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.91change.club/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="http://www.91change.club/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>经典排序算法</title>
    <link href="http://www.91change.club/2019/11/20/11/"/>
    <id>http://www.91change.club/2019/11/20/11/</id>
    <published>2019-11-20T13:11:03.000Z</published>
    <updated>2020-02-24T08:42:12.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="经典排序算法"><a href="#经典排序算法" class="headerlink" title="经典排序算法"></a>经典排序算法</h2><meta name="referrer" content="no-referrer">通过一段时间的学习，总结了一些经典的排序算法：选择排序、快速排序、冒泡排序、归并排序。<a id="more"></a><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>废话不多说上代码：<br></p><pre><code>/*选择排序*/#include&lt;stdio.h&gt;#define NUM 20int main(void){    int a[NUM], i, j, n;    int min;    printf(&quot;请输入要排序的个数（小于20）：&quot;);    scanf(&quot;%d&quot;, &amp;n);    for(i = 0; i &lt; n; i++)       {        scanf(&quot;%d&quot;, &amp;a[i]);    }    for(i = 0; i &lt; n-1; i++)   {        min = i;        for(j = i + 1; j &lt; n; j++)            min = a[j] &lt; a[min] ? j : min;        if(min != i)        {            a[i] ^= a[min];            a[min] ^= a[i];            a[i] ^= a[min];        }    }    for(i = 0; i &lt; n; i++)    {        printf(&quot;%d &quot;, a[i]);    }    printf(&quot;\n&quot;);}</code></pre><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><pre><code>/*快速排序*/#include&lt;stdio.h&gt;#define NUM 20typedef int ElemType;void QuickSort(ElemType s[], int low, int hight);int Partition(ElemType s[], int low, int hight);int main(void)`{    int a[NUM], low, hight, i, n;    printf(&quot;请输入要排序的个数（小于20）：&quot;);    scanf(&quot;%d&quot;, &amp;n);    for(i = 0; i &lt; n; i++)    {        scanf(&quot;%d&quot;, &amp;a[i]);    }    low = 0;    hight = n-1;    QuickSort(a, low, hight);    for(i = 0; i &lt; n; i++)    {        printf(&quot;%d &quot;, a[i]);    }    printf(&quot;\n&quot;);}void QuickSort(ElemType s[], int low, int hight){    if(low &lt; hight)    {        int piv = Partition(s, low, hight);        QuickSort(s, low, piv - 1);        QuickSort(s, piv+1, hight);    }}int Partition(ElemType s[], int low, int hight){    int pi = s[low];    while(low &lt; hight)    {        while(low &lt; hight &amp;&amp; s[hight] &gt;= pi)            --hight;        s[low] = s[hight];        while(low &lt; hight &amp;&amp; s[low] &lt;= pi)            ++low;        s[hight] = s[low];    }    s[low] = pi;    return low;}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;经典排序算法&quot;&gt;&lt;a href=&quot;#经典排序算法&quot; class=&quot;headerlink&quot; title=&quot;经典排序算法&quot;&gt;&lt;/a&gt;经典排序算法&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
通过一段时间的学习，总结了一些经典的排序算法：选择排序、快速排序、冒泡排序、归并排序。
    
    </summary>
    
    
      <category term="算法" scheme="http://www.91change.club/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="http://www.91change.club/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>中秋节开始堕落了</title>
    <link href="http://www.91change.club/2019/09/15/%E4%B8%AD%E7%A7%8B%E8%8A%82/"/>
    <id>http://www.91change.club/2019/09/15/中秋节/</id>
    <published>2019-09-15T07:19:13.000Z</published>
    <updated>2020-02-24T08:15:13.688Z</updated>
    
    <content type="html"><![CDATA[<h2 id="中秋节快乐"><a href="#中秋节快乐" class="headerlink" title="中秋节快乐"></a>中秋节快乐</h2><meta name="referrer" content="no-referrer"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=185912&auto=0&height=66"></iframe><br>最近的学习随着实习加中秋，已经好几天没有开始了，总感觉我要凉了。<a id="more"></a><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7k7afgemj31hc0zm40r.jpg" alt="月亮"></p><p>己亥中秋，我没有回家，同舍有两人赴苏州实习，只有我与另一名室友。但我们在寝室打了两天的游戏，我感到深深的罪恶感，我已经一个星期没看高数和英语，专业课也没怎么搞。</p><p>心想着休息几天，可是越休息越想放弃考研，或许我当初没和家人吹牛一定要考研我现在的日子一定会很好过的，每天写写代码，打打游戏，找找工作，接着每天就不用这么烦恼了，每天想着考研，但也想着没考上后的生活会怎样，二战？到明年秋招也结束了，工作也不好找。一大堆的痛苦的选择就会铺面而来，难顶啊。</p><p>还有几天实习也就结束了，也该回归到紧张状态了，毕竟现在离考研已经没有100天了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;中秋节快乐&quot;&gt;&lt;a href=&quot;#中秋节快乐&quot; class=&quot;headerlink&quot; title=&quot;中秋节快乐&quot;&gt;&lt;/a&gt;中秋节快乐&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=185912&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;
&lt;br&gt;
最近的学习随着实习加中秋，已经好几天没有开始了，总感觉我要凉了。
    
    </summary>
    
    
      <category term="考研" scheme="http://www.91change.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="感悟" scheme="http://www.91change.club/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="中秋节" scheme="http://www.91change.club/tags/%E4%B8%AD%E7%A7%8B%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>浅谈c指针(二)</title>
    <link href="http://www.91change.club/2019/08/27/9/"/>
    <id>http://www.91change.club/2019/08/27/9/</id>
    <published>2019-08-27T08:33:00.000Z</published>
    <updated>2019-08-27T15:59:42.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈c语言灵魂——指针"><a href="#浅谈c语言灵魂——指针" class="headerlink" title="浅谈c语言灵魂——指针"></a>浅谈c语言灵魂——指针</h2><p>由于最近开学了，又要实习，还要准备考研，好几天没写了。</p><a id="more"></a><p>上次写到指针和数组，今天在看一些c的面试题发现一个很重要的东西就是<font size="5" color="red">const</font>了，相信学过c的人一定会说：“const就意味着是常数了”，那只能说明你只懂皮毛了，这里推荐一篇外国大佬 Dan Saks的文章《const T vs T const》，在他的文章里完全概括了所有的用法。</p><p>下面的代码什么意思：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const  int  a;</span><br><span class="line">int  const  a;</span><br><span class="line">const  int  *a;</span><br><span class="line">int  const  *a;</span><br><span class="line">int*  const  a;</span><br><span class="line">int  const*  const a ;</span><br></pre></td></tr></table></figure><p>一般的int const和const int效果是一样的，a都是一个常数整数型的数，在这里我们只要记住<strong>int 与const 哪个放前哪个放后都是一样的</strong>，第三个a首先是一个指针其次它是一个指向常整数型的，也就是说*a是常量了，是不能被赋值的，但是a的值是可以改变的，也就是说它可以重新指向另一个地址。看下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int  i1 = 30; </span><br><span class="line">int  i2 = 40; </span><br><span class="line">const int *a = &amp;i1; </span><br><span class="line">a  =  &amp;i2;         /* 注意这里，a可以在任意时候重新赋值一个新内存地址 */ </span><br><span class="line">i2  =  80;           /* 注意看：这里不能能用*a = 80 来代替 */ </span><br><span class="line">printf(&quot;%d\n&quot;, *a); /* 输出是 80 */</span><br></pre></td></tr></table></figure><p>首先const修饰的是整个<em>a(注意不是a)。所以</em>a是常量，不能被赋值的，即使a所指的i2是变量。</p><p>由于前面第一个和第二已经说明const和int谁在前都是一样的，所以第三个和第四个效果也是一样的，这里可能就会问了那怎么用const来修饰a呢？，注意第五个的const的位置，那你就应该明白了。</p><p><strong>int  *const  a</strong> (int*  const和int  *const是一样的，只是风格不同)<br><br>先看下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int i1 = 30; </span><br><span class="line">int i2 = 40; </span><br><span class="line">int *const a = &amp;i1; </span><br><span class="line">/* a = &amp;i2; 注意这里，a 不能再这样重新赋值了，即不能再指向另一个新地址第4 行的注释）*/ </span><br><span class="line">i1 = 80;               /* 想想看：这里能用 *a = 80; 来代替吗？可以，这里可以通过*a 修改 i1 的值。（第 5 行的注释）*/ </span><br><span class="line">/* 请自行与前面一个例子比较。 */ </span><br><span class="line">printf(&quot;%d&quot;, *a);/* 输出是 80 */</span><br></pre></td></tr></table></figure><p>写到这里相信你们都懂了，a的值是不能重新被赋值的。<strong>它只能永远指向初始化时的内存地址了</strong>但是你可以通过改变*a来修改i1的值了。</p><p>所以说第五个意思 a 是一个指向整型数的常指针（也就 是说，指针指向的整型数是可以修改的，但指针是不可修改的）</p><p>与前一个例子对照一下吧！看以下的两点分析：<br>1）a 因为有了 const 的修饰，所以只是一个指针常量：也就是说 a 值是不可修改的（即 a 不可以重新指向 i2 这个变量了）（请看第 4 行的注释）。<br>2）整个*a的前面没有 const 的修饰。也就是说，*a 是变量而不是常量，所以我们可以通过*a来修改它所指内存 i1 的值（请看第 5 行的注释）。<br><br><strong>总之一句话，这次的 a 是一个指向 int 变量类型数据的指针常量。</strong></p><p>也就是说如果 const 修饰在*a 前，则不能改的是*a(即不能类似这样：*a=50;赋值)而不是指 a。  如果 const 是直接写在 a前，则 a不能改(即不能类似这样：a=&i;赋值)。</p><p>说完第五个了，接着的int  const*  const  a; 最后一个意味着 a 是一个 指向常整型数的常指针（也就是说，指针指向的整型数是不可修改的，同时指针也是不可 修改的）</p><p>const的一些基本用法就这些了，最后补充一下：</p><pre><code>1：int  *pi 指针指向 const  int  i 常量的情况const  int  i1 = 40; int  *pi; pi  =  &amp;i1;     // 这样可以吗？不行，VC 下是编译错。                 // const  int 类型的 i1 的地址是不能赋值给指向 int 类型地址的指针 pi 的。否则 pi 岂不是能修改 i1 的值了吗！pi = (int *) &amp;i1;     //这样可以吗？强制类型转换可是 C 所支持的。//VC 下编译通过，但是仍不能通过 *pi = 80 来修改 i1 的值。去试试吧！看看具体的怎样。2：const  int  *pi 指针指向 const  int  i1 的情况const  int  i1=40; const  int  *pi; pi = &amp;i1;      // 两个类型相同，可以这样赋值。很显然，i1 的值无论是通过pi 还是 i1 都不能修改的。 </code></pre><p>什么还要如此看重关键字 const 呢？<br>1). 关键字 const 的作用是为给读你代码的人传达非常有用的信息，实际上，声明一个参数 为常量是为了告诉了用户这个参数的应用目的。如果你曾花很多时间清理其它人留下的垃 圾，你就会很快学会感谢这点多余的信息。（当然，懂得用 const 的程序员很少会留下的垃圾 让别人来清理的。）<br>2). 通过给优化器一些附加的信息，使用关键字 const 也许能产生更紧凑的代码。<br>3). 合理地使用关键字 const 可以使编译器很自然地保护那些不希望被改变的参数，防止其 被无意的代码修改。简而言之，这样可以减少 bug 的出现。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;a href=&quot;#浅谈c语言灵魂——指针&quot; class=&quot;headerlink&quot; title=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;/a&gt;浅谈c语言灵魂——指针&lt;/h2&gt;&lt;p&gt;由于最近开学了，又要实习，还要准备考研，好几天没写了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="c语言" scheme="http://www.91change.club/tags/c%E8%AF%AD%E8%A8%80/"/>
    
      <category term="指针" scheme="http://www.91change.club/tags/%E6%8C%87%E9%92%88/"/>
    
      <category term="const用法" scheme="http://www.91change.club/tags/const%E7%94%A8%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2019年计划</title>
    <link href="http://www.91change.club/2019/08/24/8/"/>
    <id>http://www.91change.club/2019/08/24/8/</id>
    <published>2019-08-24T11:49:53.000Z</published>
    <updated>2020-02-24T08:36:24.297Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="密码：change" />    <label for="pass">密码：change</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1/SJ3jpmEHVTBvlC5upXC42jmvZ4vnQUhhVipauLpFHGV3T2C3JVwA1A/P5a9QhQD85On6TwLEMvLcg5FV8Hyi6zlXZC+IFxVkDecv9OyHER0KDR1gatVVQLTnwXyxVlYDco+UkOn3tO4Q/nVPPNKfS43blhinmpXWLrlFbwGrqjTFNXMtXmVkIdJLJid5MULFO5vTsyYTpo1z+L3dg4RLB9+4LRVUGf1/OaXb7BmZw2rfcF+Uy5pdAMJVtnw662wVaO3RhBjzdzPjS5/LVJ+MWQmAZ1E0M3SZlIHmJG+cK9FNocf4MGycLm3O1dFZHsS12lCCp4F3X5xGkZ1VyjoeTYHiE84hc52r82GHurEplLpSoye2r74Xlz5ofQA3Oj//UOGqr091SEN8YQUDJG4EpNLozhp/EYvDE3HPMP5viP4unyxn0I8IDJgg7CwXo+gNPLX6S6F4hB45p7bEJKGf4K4wRw/URxSDTXR9lk42Zsosq3dwf+Hve82JPqwP5wcrpUuJk0XVHKWKJS5u2TFFKkki95/PmmR5m3jiOeUKRmDrIP3kU+aAFi7PltMdgmXIXsfVT5l2bTr7wXpy7HvM99t0HBySVy5mpxjaIp9TawZ/PXDa+w2rUatQke6hV/O1zcawPL8X+O2oLGKbSB5TOsRCQh8A0L3jqseFTFF3YOueJ8vI6RZARgalbJJWV09qnxowTINRex1XR7BUS6F31fV/OUQCsdWnTkBEz884VbhJV801Bt/2gZS1/1mA9ftzuyrKO48Ed5EyFm2o0QJkzQ9+ykT8pB/Vkt76jvURo02Z21rnUTK8zB/RUntMtmm5ij4Kij7ffD5OIi6IAdB29Vzwdm1ZAonXl6h4mUnxmK1OzfEzSTBjz+P4/KS6rB7VGYyj07yRulwrMZBaQgAC/2k0viEXICS2ZZNxHs5GWJhcviALfktsNZzMwcefKdh/RDH1x/ukwzQy8XMjgMr+NTfdY1auq0JZOgtbkTyDoRWlOjLMrIIqWneF4VyelD8+SBFqkWGkDiWkfaLQkqI7Kjc+LD1LOVbePtG0218/PpNvG8vsyYPVHrxww7VDTi9hu0fs5wAXfAwhaPSxJJyBgIYLWL7NF/equJQ+obExiDqinbHWto9/OwqG5g8irwK9V8mcYSAxkcZWLK5aJ1hCUh+z7OrGRuaIIqAvVl4b8nA5fuD4GfoB08jSQt0NSq7Yy1yOJxE0Zpyytt0al9jN/HFbGTZSE9Ma8WxD2KwpTUDHJ7u7is4i+UxdYZc7f72RLpaA/1JWBLkbMxIq3QdSb/s2AhGlcZhSJgzemd7JTeWtheG66TWK/</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是2019年对自己的一些要求，可能会实现其中一个，但是写出来才有动力，祝大家今天的计划都能实现，梦还是要有的，万一实现了呢，大家一起努力。
    
    </summary>
    
    
      <category term="计划" scheme="http://www.91change.club/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>浅谈c指针(一)</title>
    <link href="http://www.91change.club/2019/08/21/6/"/>
    <id>http://www.91change.club/2019/08/21/6/</id>
    <published>2019-08-21T11:46:25.000Z</published>
    <updated>2020-02-24T08:35:33.662Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈c语言灵魂——指针"><a href="#浅谈c语言灵魂——指针" class="headerlink" title="浅谈c语言灵魂——指针"></a>浅谈c语言灵魂——指针</h2><meta name="referrer" content="no-referrer"><p>c语言什么最难，当然是指针(Pointer)，c语言之所以强大，以及其自由性，很大部分体现在其灵活的指针运用上。因此，说指针是c语言的灵魂，一点都不为过。</p><a id="more"></a><p>学c语言不学指针，那就等于没学。但是指针又是最难学的，指来指去连自己都指晕了，这也是为什么很对人放弃c语言的原因。</p><h3 id="什么是指针？"><a href="#什么是指针？" class="headerlink" title="什么是指针？"></a>什么是指针？</h3><h5 id="首先想一下下面这段代码的1、2输出是什么？"><a href="#首先想一下下面这段代码的1、2输出是什么？" class="headerlink" title="首先想一下下面这段代码的1、2输出是什么？"></a>首先想一下下面这段代码的1、2输出是什么？</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">int i=100;</span><br><span class="line">printf(&quot;%d\n&quot;,i);     //1</span><br><span class="line">printf(&quot;%d\n&quot;,&amp;i);    //2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了相信大家都有自己的判断了。</p><p><code>int *pi;</code></p><p>上面这个应该 是最基础的了，pi就是指针我们当然知道了，但是你要说它与int pi; 有什么区别，它也没有，因为他也是变量，顶多叫指针声明（不能为叫申明），那他到底有什么意义呢？ 看下面：<br><br><code>pi = &amp;i;</code><br><br><br>这个应该都能看懂吧，通俗点讲就把变量 i 的地址编号赋值给 pi 。<br><br>如：</p><table><thead><tr><th align="center">变量</th><th align="center">内容</th><th align="center">内存地址编号</th></tr></thead><tbody><tr><td align="center">i</td><td align="center">100</td><td align="center">7</td></tr><tr><td align="center">pi</td><td align="center">?</td><td align="center">10</td></tr></tbody></table><p>表格中 ? 该为多少，相信大家都会填，为<strong>7</strong>也就是i的地址编号。也就是说&amp;为取地址号操作，我们就把pi称为指针，所以要记住，指针变量所存的内容为地址编号就行了。</p><p>讲到这，我们再回归到上面的代码1处，都知道1处输出为<strong>100</strong>，那下面这句呢？<br><br><code>printf(&quot;%d\n&quot;,*pi);</code><br><br>这句该怎么理解呢，上面不是说了吗pi就是i的地址编号——即pi的内容就是<strong>7</strong>，所以*pi就是pi所指地址的内容了，也就是 i 内容了100它就等同于1处的代码了。</p><p>这些都是很基础的了，下面将一些难的，</p><h3 id="指针与数组"><a href="#指针与数组" class="headerlink" title="指针与数组"></a>指针与数组</h3><p>一维数组a[i]中的a表示数组名，也可以表示a[0]的地址，它是等同于*a的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;%d\n&quot;,a[i]);</span><br><span class="line">printf(&quot;%d\n&quot;,*(a+i));</span><br></pre></td></tr></table></figure><br>都表示遍历数组a[i]的，但是他们是有区别的<p><strong>a[]和*a的区别：</strong><br><br>char *a 与char a[] 的区别：<br></p><ul><li><p>char *a = “hello” 中的a是指向第一个字符‘h’的一个指针<br></p></li><li><p>char a[20] = “hello” 中数组名a也是执行数组第一个字符‘h’的指针</p></li></ul><p>但二者并不相同：</p><p>如：把两个字符串相加</p><p><img src="https://tvax4.sinaimg.cn/large/006p97Wqgy1gc7krqaswmj307p060745.jpg" alt="图片1"></p><p>结果：</p><p><img src="https://tva3.sinaimg.cn/large/006p97Wqgy1gc7ks5h2k9j303o00j0nz.jpg" alt="图片4"></p><p>对比：</p><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7ksjo5ghj307105y3yd.jpg" alt="图片3"></p><p>结果：</p><p><img src="https://tva3.sinaimg.cn/large/006p97Wqgy1gc7ksyt7i6j304h00j0m4.jpg" alt="图片5"></p><p>把字符串加到指针所指的字串上去，出现段错误，<font color="red">本质原因</font>：*d=”0123456789”存放在常量区，是无法修的。而数组是存放在<font color="red">栈</font>中，是可以修改的。两者区别如下：<br><br>一. ”读“ ”写“ 能力</p><ul><li>char *a = “abcd”;  此时”abcd”存放在常量区。通过指针只可以访问字符串常量，而不可以改变它。<br></li></ul><ul><li>而char a[20] = “abcd”； 此时 “abcd”存放在栈。可以通过指针去访问和修改数组内容。<br>二. 赋值时刻</li></ul><ul><li>char *a = “abcd”; 是在编译时就确定了（因为为常量）。</li></ul><ul><li>而char a[20] = “abcd”； 在运行时确定<br>三. 存取效率</li></ul><ul><li>char *a = “abcd”; 存于静态存储区。在栈上的数组比指针所指向字符串快。因此慢</li></ul><ul><li>而char a[20] = “abcd”； 存于栈上。快<br>另外注意：<br>char a[] = “01234”,虽然没有指明字符串的长度，但是此时系统已经开好了，就是大小为6—–’0’ ‘1’ ‘2’ ‘3’ ‘4’ ‘\0’，(注意strlen(a)是不计‘\0’)，也就是说字符串长度为5，但是字符串占有的空间为6。<br></li></ul><p>看一结构中出现的同样的问题：<br>这样红色部分在调用int函数时会出现“Segment Default”, 因为此时 指针n是静态的，只有“读”的本事，不可以改变。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;a href=&quot;#浅谈c语言灵魂——指针&quot; class=&quot;headerlink&quot; title=&quot;浅谈c语言灵魂——指针&quot;&gt;&lt;/a&gt;浅谈c语言灵魂——指针&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;c语言什么最难，当然是指针(Pointer)，c语言之所以强大，以及其自由性，很大部分体现在其灵活的指针运用上。因此，说指针是c语言的灵魂，一点都不为过。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指针" scheme="http://www.91change.club/tags/%E6%8C%87%E9%92%88/"/>
    
      <category term="C语言" scheme="http://www.91change.club/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>关于七牛云图床的使用</title>
    <link href="http://www.91change.club/2019/08/19/5/"/>
    <id>http://www.91change.club/2019/08/19/5/</id>
    <published>2019-08-19T11:47:56.000Z</published>
    <updated>2020-02-24T08:33:01.032Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于七牛云的使用"><a href="#关于七牛云的使用" class="headerlink" title="关于七牛云的使用"></a>关于七牛云的使用</h2><meta name="referrer" content="no-referrer"><p>在网站的访问过程中，由于要使用图片才能显现美观，但图片过多时就会降低网站的访问进程，增加访问的时间，所以我们就要把图片同一处理，放在一个图床里单独访问，但是自己配一个服务器又要钱，买一个云储存对象很贵，这里介绍了七牛云，每个月免费10G的存储空间，非常适合小型博客网站，相册的使用。</p><a id="more"></a><h4 id="1、注册七牛云"><a href="#1、注册七牛云" class="headerlink" title="1、注册七牛云"></a>1、注册<a href="https://portal.qiniu.com/signup" target="_blank" rel="noopener">七牛云</a></h4><p>进入主页点击：<br>为了更直观 我截图来说明</p><p><img src="https://tva2.sinaimg.cn/large/006p97Wqgy1gc7kmcbtm1j30zn0ragoe.jpg" alt="QQ图片20190820192645"></p><p><img src="https://tvax1.sinaimg.cn/large/006p97Wqgy1gc7kmt3p9uj314a0jsgng.jpg" alt="QQ图片20190820192652"></p><h4 id="2、创建好后我们可以看到"><a href="#2、创建好后我们可以看到" class="headerlink" title="2、创建好后我们可以看到"></a>2、创建好后我们可以看到</h4><p><img src="https://tva3.sinaimg.cn/large/006p97Wqgy1gc7kn7mh5tj311x0hwjsu.jpg" alt="QQ图片20190820192658"></p><p> <strong>记住这个域名</strong><br>虽然这旁边有上传文件，把图片上床后就会形成一个URL地址<br>然后你的代码里添加这个URL就可以加载图片了，但是非常麻烦每次都要打开这个网站传，所以这里介绍一个插件PicGo，大家可以到我<a href="https://github.com/jirouping/PicGo" target="_blank" rel="noopener">github</a>上下载。特别感谢PicGo大佬的插件。</p><p>然后配置PicGo插件：</p><p>1、网址为上图里的默认域名 </p><p>2、AK和SK进密钥管理看</p><p><img src="https://tvax2.sinaimg.cn/large/006p97Wqgy1gc7ko1ptbtj30f70fwq3h.jpg" alt="QQ图片20190820192701"></p><h4 id="Next"><a href="#Next" class="headerlink" title="Next:"></a>Next:</h4><p><img src="http://pwbwgsn9c.bkt.clouddn.com/QQ%E5%9B%BE%E7%89%8720190820194407.png" alt="5"></p><h4 id="配置七牛图床"><a href="#配置七牛图床" class="headerlink" title="配置七牛图床:"></a>配置七牛图床:</h4><p><img src="https://tva4.sinaimg.cn/large/006p97Wqgy1gc7kqcoyikj30rx0ftjsu.jpg" alt="QQ图片20190820194747"></p><p>配置好后进去上传区，上传图片。然后在相册区复制不同类型的URL</p><p>这就是一些七牛云的操作。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于七牛云的使用&quot;&gt;&lt;a href=&quot;#关于七牛云的使用&quot; class=&quot;headerlink&quot; title=&quot;关于七牛云的使用&quot;&gt;&lt;/a&gt;关于七牛云的使用&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;在网站的访问过程中，由于要使用图片才能显现美观，但图片过多时就会降低网站的访问进程，增加访问的时间，所以我们就要把图片同一处理，放在一个图床里单独访问，但是自己配一个服务器又要钱，买一个云储存对象很贵，这里介绍了七牛云，每个月免费10G的存储空间，非常适合小型博客网站，相册的使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="七牛云" scheme="http://www.91change.club/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
      <category term="插件" scheme="http://www.91change.club/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="PicGo" scheme="http://www.91change.club/tags/PicGo/"/>
    
  </entry>
  
  <entry>
    <title>yilia主题的一些配置问题</title>
    <link href="http://www.91change.club/2019/08/17/4/"/>
    <id>http://www.91change.club/2019/08/17/4/</id>
    <published>2019-08-17T04:02:21.000Z</published>
    <updated>2020-02-24T08:28:28.308Z</updated>
    
    <content type="html"><![CDATA[<h2 id="页面点击爱心和网站访问数量的实现"><a href="#页面点击爱心和网站访问数量的实现" class="headerlink" title="页面点击爱心和网站访问数量的实现"></a>页面点击爱心和网站访问数量的实现</h2><meta name="referrer" content="no-referrer"><p>为了完善自己更好看的博客，对原始主题进行了一些小的修改</p><a id="more"></a><h5 id="页面点击出现爱心的实现"><a href="#页面点击出现爱心的实现" class="headerlink" title="页面点击出现爱心的实现"></a>页面点击出现爱心的实现</h5><p>在这里我加了一些js代码让页面显示更炫酷，文件我上传到了<u><a href="https://github.com/jirouping/yilia-love/blob/master/love.js" target="_blank" rel="noopener"><strong>我的github</strong></a></u>里大家可以复制下来，然后新建一个<u><strong><em>love.js</em></strong></u>文件加在<font color="orange" size="4">\blog\themes\yilia\source</font>里，接着在你的<font color="orange" size="4">\blog\themes\yilia\layout\_partial\footer.ejs</font>的最后面加入以下代码：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="页面访问次数的实现"><a href="#页面访问次数的实现" class="headerlink" title="页面访问次数的实现"></a>页面访问次数的实现</h4><p>这里我是使用<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>来实现的，首先同在你的<font color="orange" size="4">\blog\themes\yilia\layout_partial\footer.ejs</font>加入如下代码：</p><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7kkp42fjj30on0abgma.jpg" alt="QQ图片20190817202816"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 自己加一个div</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line"> 本站访客数：&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人 |</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">本文总阅读量：&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>再在最后加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>最后面实现：</p><h2 id><a href="#" class="headerlink" title></a><img src="https://tvax2.sinaimg.cn/large/006p97Wqgy1gc7klmgi5gj30kd02imx0.jpg" alt="QQ图片20190817202810"></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;页面点击爱心和网站访问数量的实现&quot;&gt;&lt;a href=&quot;#页面点击爱心和网站访问数量的实现&quot; class=&quot;headerlink&quot; title=&quot;页面点击爱心和网站访问数量的实现&quot;&gt;&lt;/a&gt;页面点击爱心和网站访问数量的实现&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;为了完善自己更好看的博客，对原始主题进行了一些小的修改&lt;/p&gt;
    
    </summary>
    
    
      <category term="yilia" scheme="http://www.91change.club/tags/yilia/"/>
    
      <category term="hexo" scheme="http://www.91change.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>考研日常记</title>
    <link href="http://www.91change.club/2019/08/16/3/"/>
    <id>http://www.91change.club/2019/08/16/3/</id>
    <published>2019-08-16T14:18:43.000Z</published>
    <updated>2020-02-24T08:26:41.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="梦里花落知多少"><a href="#梦里花落知多少" class="headerlink" title="梦里花落知多少"></a>梦里花落知多少</h2><meta name="referrer" content="no-referrer"><p>积极的人在每一次忧患中都看到一个机会，而消极的人则在每个机会都会看某种忧患</p><a id="more"></a><p>今天又慌废了一天，我想大概是我校园卡掉了的原因，心情特别不好，下午在教室总是心在焉。大概我就是消极的人，每次有一点不好的事情都会忧心忡忡，可能与性格相关，单身加计算机专业宅男，还很内向，不好交流，每次的所见所感都是talk to myself。<br><br>想到一个有意思的单词前天在看朱伟老师的单词视频 —— Independent，所以可以叫我Mr.Independent吧<br><br><br><br></p><p><img src="https://tvax1.sinaimg.cn/large/006p97Wqgy1gc7kjofqr9j356o3ggu0y.jpg" alt="风景"></p><br><p>回到寝室写了篇博客记录下，心情好了点，这大概就是所谓的发泄吧，把自己的心情写给陌生的网友看，我不像一些QQ好友一样鸡毛蒜皮的小事也会发一个说说来言于他人，我可是高贵的强者。<br><br></p><p>所以不管干什么都会又压力，有挫折，但要去发泄出来才能换来明天的好心情。<br><br><br>祝愿明天有个好心情，考研路上很多绊脚石，只有一点一点来，按自己的思路来。</p><p>物是人非事事休，欲语泪先流。<br>最后记录一首卢前的词——《梦花落知多少》：<br><br><br>记得当时年纪小，你爱谈天我爱笑，有一回并肩坐在桃树下，风在树梢鸟在叫，我不知怎样睡着了，梦里花落知多少。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;梦里花落知多少&quot;&gt;&lt;a href=&quot;#梦里花落知多少&quot; class=&quot;headerlink&quot; title=&quot;梦里花落知多少&quot;&gt;&lt;/a&gt;梦里花落知多少&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;积极的人在每一次忧患中都看到一个机会，而消极的人则在每个机会都会看某种忧患&lt;/p&gt;
    
    </summary>
    
    
      <category term="考研" scheme="http://www.91change.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="感悟" scheme="http://www.91change.club/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="Independent" scheme="http://www.91change.club/tags/Independent/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客的搭建之旅</title>
    <link href="http://www.91change.club/2019/08/12/first/"/>
    <id>http://www.91change.club/2019/08/12/first/</id>
    <published>2019-08-12T13:01:37.000Z</published>
    <updated>2020-02-24T08:25:50.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-阿里云（centos7-x）-git"><a href="#hexo-阿里云（centos7-x）-git" class="headerlink" title="hexo+阿里云（centos7.x）+git"></a>hexo+阿里云（centos7.x）+git</h2><meta name="referrer" content="no-referrer"><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>拥有个人的博客是每个程序员的想法，我也一样所以看到最近看到hexo的博客，心血来潮，查一下，hexo是一个轻量的博客框架，</p><a id="more"></a><p>对于一个没学过数据库，只自学一点mysql和php的嵌入式的同学非常方便。之前也用过LAMP+腾讯云的方式搭建过wordpress博客，这个博客有后台数据库等（搭建很简单），但死于主题的选择，换了博客，个人感觉hexo主题比较美观可以自己添加很多功能所以选择这个轻量级的博客。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>虽然hexo的简便，但是安装起来可是花费我好几天的时间，比wordpress难。所以写了一个小结，帮助后面的小伙伴们安装。</p><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="(1)准备工作"></a>(1)准备工作</h3><h4 id="先从本地环境开始安装需要的配置-我的电脑是Win10-64位"><a href="#先从本地环境开始安装需要的配置-我的电脑是Win10-64位" class="headerlink" title="先从本地环境开始安装需要的配置(我的电脑是Win10  64位)"></a>先从本地环境开始安装需要的配置(我的电脑是Win10  64位)</h4><p> <font color="#FF0000" size="4"><strong>需要安装的:</strong></font></p><ul><li><p>Git：<a href="https://git-scm.com/" title="Git官网" target="_blank" rel="noopener">https://git-scm.com/</a></p></li><li><p>Notepad++：你喜欢用什么就用什么(记事本也行但是后面改东西时会很乱）这里我推荐用Notepad++</p></li><li><p>Node.js：<a href="http://nodejs.cn/download/" title="Node.js下载" target="_blank" rel="noopener">http://nodejs.cn/download/</a> </p></li><li><p>npm：npm是node的模块管理工具，淘宝镜像地址(<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org</a>/)</p></li></ul><p>你还要有github账号(没有就去申请)</p><h4 id="下载完后需要进行配置-这里就不多讲了自己查查资料很简单的"><a href="#下载完后需要进行配置-这里就不多讲了自己查查资料很简单的" class="headerlink" title="下载完后需要进行配置(这里就不多讲了自己查查资料很简单的)"></a>下载完后需要进行配置(这里就不多讲了自己查查资料很简单的)</h4><p>安装完成的截图：<br><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7kcbn2zhj30g70dfaap.jpg" alt="1"></p><p>当出现上图时表示安装好了  Next！</p><h3 id="2-服务器环境搭建"><a href="#2-服务器环境搭建" class="headerlink" title="(2)服务器环境搭建"></a>(2)服务器环境搭建</h3><ul><li><h4 id="第一步安装Git-好像Ubuntu自带git，没用过带哥们可以试试"><a href="#第一步安装Git-好像Ubuntu自带git，没用过带哥们可以试试" class="headerlink" title="第一步安装Git(好像Ubuntu自带git，没用过带哥们可以试试)"></a>第一步安装Git(好像Ubuntu自带git，没用过带哥们可以试试)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git --version  //如果有就不用安装直接跳过这一步</span><br><span class="line">yum install git</span><br></pre></td></tr></table></figure></li><li><h4 id="创建git用户"><a href="#创建git用户" class="headerlink" title="创建git用户"></a>创建git用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd git     //创建用户</span><br><span class="line">passwd git     //设置密码</span><br><span class="line">su git               //切换用户</span><br><span class="line">cd /home/git/</span><br><span class="line">mkdir -p projects/blog          //项目的目录</span><br><span class="line">mkdir repos &amp;&amp;cd repos      </span><br><span class="line">git init --bare blog.git           //创建一个空的仓库</span><br><span class="line">cd  blog.git/hooks         </span><br><span class="line">vim  post-receive                 //创建一个钩子函数</span><br></pre></td></tr></table></figure></li></ul><p>输入下面的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>输入完后修改权限，输入下面命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br><span class="line">exit   //退出登录  </span><br><span class="line">chown -R git:git /home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p><font color="#FF0000" size="5"><strong><em>注：</em></strong></font><br><font color="#FF0000" size="4"><em>由于没有在etc/sudoers里面添加git     ALL=(ALL)       ALL，所以有的命令不能使用，只能严格按照前面的来</em></font></p><p>全部弄好后就要测试下了：<br>首先你要在一个空白地方建立一个你要clone下git仓库的文件夹如：B:/test然后在本地用Git进入你的文件夹，然后执行下面的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@你的服务器ip:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p>出现下图就算成功了</p><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7kavyx33j30h6095gls.jpg" alt="2"><br><img src="https://tva2.sinaimg.cn/large/006p97Wqgy1gc7kb7ple1j30kp0eg3zd.jpg" alt="3"></p><h3 id="3-建立ssh信任"><a href="#3-建立ssh信任" class="headerlink" title="(3)建立ssh信任"></a>(3)建立ssh信任</h3><p>创建公共秘钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;      //你的github名字，如我的：jirouping</span><br><span class="line">git config --global user.email &quot;youremail&quot;      //你的github绑定的邮箱，如你注册使用的QQ邮箱</span><br></pre></td></tr></table></figure><p>然后不用管直接回车，next：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>生成的<font color="#FF0000"><strong>.ssh</strong></font>文件，在你电脑里找，一般在C:/user/…下，不同的电脑不一样<br><img src="https://tvax2.sinaimg.cn/large/006p97Wqgy1gc7kcnd6ttj30oc072jrs.jpg" alt="4"></p><p>看到上图就可以了接着建立信任了在本地的Git Bash上输入： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i C:/Users/yourname/.ssh/id_rsa.pub git@server_ip</span><br><span class="line">ssh git@server_ip // 测试能否登录</span><br></pre></td></tr></table></figure><p><font color="#FF0000" size="3">这时候可以连接你的服务器了是不要密码的！否则就检查下上面的步骤</font><br>当成功连接后，我们知道了以后就可以通过ssh来连接你的服务，虽然不是在root下，但还是存在问题</p><p>那我们就用可以设置限制git用户登录让他只能传输和clone文件<br>在服务器上操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells           // 查看`git-shell`是否在登录方式里面，有则跳过</span><br><span class="line">which git-shell         // 查看是否安装</span><br><span class="line">vim /etc/shells</span><br><span class="line">在后面添加上2步显示出来的路劲，通常在 /usr/bin/git-shell</span><br></pre></td></tr></table></figure><p>然后修改下<font color="#FF0000">/etc/passwd/</font>的权限，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /etc</span><br><span class="line">vim passwd         </span><br><span class="line">修改原来的：</span><br><span class="line">git:x:1000:1000::/home/git:/bin/bash</span><br><span class="line"></span><br><span class="line">改成：</span><br><span class="line">git:x:1000:1000::/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><h3 id="4-搭建nginx服务器"><a href="#4-搭建nginx服务器" class="headerlink" title="(4)搭建nginx服务器"></a>(4)搭建nginx服务器</h3><ul><li>安装和启动nginx:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx -y       //安装</span><br><span class="line">systemctl start nginx     //这是CentOs7.x启动方式，也有其他的如：./nginx</span><br><span class="line">systemctl enable nginx     //设置开机自启</span><br></pre></td></tr></table></figure></li></ul><p>装好后，就可访问你的界面了（出现什么welcome tonginx一个蓝色框就对了）注意看英文（很简单的应该都看得懂）里面有nginx的配置文件的路径记下来，一般是/etc/nginx/nginx.conf ,如果是其他版本的自己注意下页面里的内容。</p><ul><li>修改配置文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop // 先停止nginx</span><br><span class="line">cd /etc/nginx</span><br><span class="line">vim nginx.conf</span><br><span class="line"></span><br><span class="line">修改 root 解析路径，如下图</span><br><span class="line">同时将 user 改为 root 如下图，不然nginx无法访问 /home/git/project/blog</span><br><span class="line"></span><br><span class="line">systemctl start nginx      //启动nginx</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://tva3.sinaimg.cn/large/006p97Wqgy1gc7kcyis1yj30ce07uaaa.jpg" alt="5"></p><p><img src="https://tva3.sinaimg.cn/large/006p97Wqgy1gc7kdaql44j30js0c1gmh.jpg" alt="6"></p><p>到此服务器端就算好了！！</p><h3 id="5-Hexo博客的安装"><a href="#5-Hexo博客的安装" class="headerlink" title="(5)Hexo博客的安装"></a>(5)Hexo博客的安装</h3><ul><li>安装hexo<br>在git-for-windows上面运行下面的语句（git-for-windows版本要高于2.12）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g      #使用全局设置下载、安装hexo至默认的文件夹</span><br><span class="line">hexo init blog                      #在当前文件夹下初始化一个blog项目，从远程git仓库拷贝</span><br><span class="line">cd blog                                 #进入blog</span><br><span class="line">npm install                           #安装指定模块，package.json指定</span><br><span class="line">hexo g</span><br><span class="line">hexo server                          #打开服务</span><br></pre></td></tr></table></figure></li></ul><p>用浏览器打开：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 出现下面这样就好了<br><img src="https://tva3.sinaimg.cn/large/006p97Wqgy1gc7kdmtmo4j30y80gdaio.jpg" alt="7"></p><p>在package.json文件中添加npm脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;deploy&quot;: &quot;hexo clean &amp;&amp; hexo g -d&quot;,</span><br><span class="line">  &quot;start&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://tvax4.sinaimg.cn/large/006p97Wqgy1gc7kdwt3jqj30ii09xdg8.jpg" alt="8"></p><p>然后直接用npm命令就可以本地调试和上传服务器了<br>本地调试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run start</span><br></pre></td></tr></table></figure><p>修改博客主目录的配置文件：_config.yml来上传至服务器<br><img src="https://tvax3.sinaimg.cn/large/006p97Wqgy1gc7keob2hqj30gd059t8w.jpg" alt="10"></p><p><img src="https://tva1.sinaimg.cn/large/006p97Wqgy1gc7ke5fousj30k004kdg2.jpg" alt="9"></p><p>直接照着上图填开始deploy属性里面只有type，后面的repo和branch是自己添加上去的（别慌，不要以为自己没下完整）<br><font color="#FF0000" size="6"><strong><em>注：</em></strong></font>在deploy里添加东西时之间要加空格 (<font color="#FF0000"><strong><em>如:git与:之间有空格</em></strong></font>)没加就会出错，传不到服务器</p><p>然后上传服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><p>浏览器访问下你的域名和ip就可以看到了</p><p>故事到这接结束了，花了我好几天总算有点成果了，希望对你有帮助</p><h2 id="有问题可以加我一起讨论。"><a href="#有问题可以加我一起讨论。" class="headerlink" title="有问题可以加我一起讨论。"></a>有问题可以加我一起讨论。</h2><div align="center"> <img src="https://tva2.sinaimg.cn/large/006p97Wqgy1gc7kibbprej30kw0r2jt6.jpg" alt="vxprofile" width="300"></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo-阿里云（centos7-x）-git&quot;&gt;&lt;a href=&quot;#hexo-阿里云（centos7-x）-git&quot; class=&quot;headerlink&quot; title=&quot;hexo+阿里云（centos7.x）+git&quot;&gt;&lt;/a&gt;hexo+阿里云（centos7.x）+git&lt;/h2&gt;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;拥有个人的博客是每个程序员的想法，我也一样所以看到最近看到hexo的博客，心血来潮，查一下，hexo是一个轻量的博客框架，&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.91change.club/tags/hexo/"/>
    
      <category term="阿里云" scheme="http://www.91change.club/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
</feed>
